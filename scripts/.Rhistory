axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1)) +
geom_smooth(method='lm',se=FALSE, colour="blue")
?rlm
cor.test(dPerform$avg,dPerform$intSlope)
anova(rb_lm , test = "RWald")
rlm(avg ~ intSlope, data = dPerform)
?f.robftest
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lmRob',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lmRob',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lm',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='rlm',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='rlm',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lmRob',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lmRob',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1)) +
geom_smooth(method='lm',se=FALSE, colour="black")
ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='lmRob',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1)) +
geom_smooth(method='lm',se=FALSE, colour="blue")
f.robftest(r_lm, var = "intSlope")
r_lm = rlm(avg ~ intSlope, data = dPerform)
summary(r_lm)
f.robftest(r_lm, var = "intSlope")
anova(rb_lm , test = "RF")
rb_lm = lmRob(avg ~ intSlope, data = dPerform)
rb_lm
anova(rb_lm , test = "RWald")
anova(rb_lm , test = "RWald")
r_lm = rlm(avg ~ intSlope, data = dPerform)
summary(r_lm)
f.robftest(r_lm, var = "intSlope")
20*7
20*30
?anova.lmRob
summary(lm(avg ~ intSlope, data = dPerform))
summary(lm(avg ~ intSlope, data = dPerform))
rb_lm = lmRob(avg ~ intSlope, data = dPerform)
rb_lm
anova(rb_lm , test = "RWald")
?anova.lmRob
anova(rb_lm , test = "RF")
rb_lm = rlm(avg ~ intSlope, data = dPerform)
rb_lm
anova(rb_lm , test = "RWald")
rb_lm = rlm(avg ~ intSlope, data = dPerform)
summary(rb_lm)
f.robftest(rb_lm , var = "intSlope")
f.robftest
s = f.robftest(rb_lm , var = "intSlope")
summary(f.robftest(rb_lm , var = "intSlope")_
summary(f.robftest(rb_lm , var = "intSlope"))
f.robftest(rb_lm , var = "intSlope")
# Clear workspace
rm(list = ls())
# Load helper functions
source('helper_functions.R')
# Import libraries
packages = c("tidyr","dplyr","ggplot2","lme4","lmerTest","Hmisc","car","lmtest","Rarity","cowplot","MASS",'sfsmisc')
ipak(packages)
# Redo long calculations
redo_calc = 1;
# Read data
AllData = read.csv("../data/AllData_inlab.csv")
# Convert to factors
AllData$Sub = as.factor(AllData$Sub)
AllData$Pred = as.factor(AllData$Pred)
AllData$Want2See = as.factor(AllData$Want2See)
AllData$Con_Rev = factor(AllData$Con, levels = c('Coop','Comp'))
AllData$Cat_n_z = as.numeric((scale(AllData$Cat_n)))
# Cooperation Condition: Does motivation bias participants' perceptual judgments?
thisData = subset(AllData, Con == "Coop")
summary(glmer(Choice ~ Cat_n_z + Pred + (Pred |Sub), thisData, family = binomial(link="probit")))
# Competition Condition: Does motivation bias participants' perceptual judgments?
thisData = subset(AllData, Con == "Comp")
summary(glmer(Choice ~ Cat_n_z + Pred + (Pred |Sub), thisData, family = binomial(link="probit")))
# Condition x Bet Interaction
if (redo_calc) {
res = glmer(Choice ~ Cat_n_z + Con * Pred + (Con * Pred|Sub), AllData,
family = binomial(link="probit"), control = glmerControl(calc.derivs = FALSE))
save(res,file="long_calc/ConditionxBet_Inlab.Rda")
} else {
load("long_calc/ConditionxBet_Inlab.Rda")
}
summary(res)
thisData = AllData
thisData$Pred = recode(thisData$Pred,"0='Face';1='Scene'")
# Run GLM (for visualization only, do not use for inference)
res.glm = glm(Choice ~ Cat_n + Con_Rev * Pred, thisData, family = binomial(link="probit"))
# Create predicted dataset
pred.data = data.frame(Cat_n = rep(seq(0, 100, len = 101),4),
Con_Rev = c(rep("Coop",202),rep("Comp",202)),
Pred = c(rep("Face",101),rep("Scene",101),rep("Face",101),rep("Scene",101))
)
pred.data$Choice = predict.glm(res.glm,pred.data,type = "response")
# Compute Subject Average
sub_avg = group_by(thisData,Sub,Con_Rev,Cat_n,Pred) %>%
summarise(Avg = mean(Choice, na.rm=T), SEM = sem(Choice))
# Plot group average with fit
plot.behav = ggplot() +
stat_summary(data = sub_avg, aes(x=Cat_n,y=Avg,color = Pred),
fun.y=mean,geom="point",size=2.5) +
stat_summary(data = sub_avg, aes(x=Cat_n,y=Avg,color = Pred),
fun.data = mean_cl_normal, geom = "errorbar",width=1,
fun.args = list(mult = 1)) +
geom_line(data = pred.data, aes(x=Cat_n,y=Choice,color= Pred),size=1) +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x  = element_text(size=13,color="black"),
axis.text.y  = element_text(size=13,color="black"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold", size = 15)) +
xlab("% Scene") + ylab("P(Respond Scene)") +
facet_grid(~Con_Rev, labeller=labeller(Con_Rev = c("Coop" = "Cooperation","Comp" = "Competition"))) +
scale_colour_manual(values=myPalette)
# Extract random slope of the interaction
intSlope = unlist(coef(res)$Sub$`ConCoop:Pred1`)
# Create datafrom for each subjec'ts bias, and order in descending order
SubBias = as.data.frame(intSlope)
SubBias$Sub = unique(AllData$Sub)
SubBias = SubBias[order(-SubBias$intSlope), ]
plot.behavbias = ggplot(data=SubBias, aes(c(1:28), y=intSlope)) +
geom_bar(stat="identity") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_text(size=14,color="black"),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Participant") + ylab("Motivational Bias") +
scale_y_continuous(breaks=seq(0,4,2)) +
coord_cartesian(ylim=c(-1, 5))
# Calculate performance
performData=subset(AllData,(Cat_n != 50) & !is.na(Choice))
performData = mutate(performData, outcome = (Choice == 1 & Cat_n > 50) | (Choice == 0 & Cat_n < 50))
# Run correlation
dPerform = group_by(performData,Sub) %>%
summarise(avg = mean(outcome))
dPerform = left_join(dPerform,SubBias)
# Make performance plot
plot.perform = ggplot(dPerform, aes(intSlope, avg)) +
geom_point() +
geom_smooth(method='rlm',se=FALSE, colour="black") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x  = element_text(size=14,color="black"),
axis.text.y  = element_text(size=14,color="black"),
axis.line = element_line(colour = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold")) +
xlab("Motivational Bias") +
ylab("Performance") +
coord_cartesian(ylim=c(0.7, 1))
# Robust Regression
rb_lm = rlm(avg ~ intSlope, data = dPerform)
summary(rb_lm)
f.robftest(rb_lm , var = "intSlope")
s = f.robftest(rb_lm , var = "intSlope")
# Clear workspace
rm(list = ls())
# Load helper functions
source('helper_functions.R')
# Import libraries
packages = c("tidyr","dplyr","ggplot2","lme4","lmerTest","Hmisc","car","lmtest","Rarity","cowplot")
ipak(packages)
# Redo long calculations
redo_calc = 0;
# Read data
AllData = read.csv("../data/AllData.csv")
# Convert to factors
AllData$Sub = as.factor(AllData$Sub)
AllData$Pred = as.factor(AllData$Pred)
AllData$Want2See = as.factor(AllData$Want2See)
AllData$Con_Rev = factor(AllData$Con, levels = c('Coop','Comp'))
# Load psychometric results (see Fig. 2 code)
load("long_calc/ConditionxBet.Rda")
# Extract random slope of the interaction
intSlope = unlist(coef(res)$Sub$`ConCoop:Pred1`)
# Create datafrom for each subject's bias, and order in descending order
SubBias = as.data.frame(intSlope)
SubBias$Sub = unique(AllData$Sub)
SubBias = SubBias[order(-SubBias$intSlope), ]
PPC = read.csv("../data/ExamplePPC.csv", header = T)
View(PPC)
# Plot RT
AllData_ValidTrials = filter(AllData, !(is.na(Choice)))
AllData_ValidTrials$RT_Rev = as.numeric(as.character(AllData_ValidTrials$RT))
AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] = AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] * - 1
PPC = read.csv("../data/full_100000_ppc_data.csv", header = T)
# Plot one subject
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 2) +
ggtitle("Example Participant") +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank())
View(PPC)
View(AllData_ValidTrials)
rm(list =ls())
# Clear workspace
rm(list = ls())
# Load helper functions
source('helper_functions.R')
# Import libraries
packages = c("tidyr","dplyr","ggplot2","lme4","lmerTest","Hmisc","car","lmtest","Rarity","cowplot")
ipak(packages)
# Redo long calculations
redo_calc = 0;
# Read data
AllData = read.csv("../data/AllData.csv")
# Convert to factors
AllData$Sub = as.factor(AllData$Sub)
AllData$Pred = as.factor(AllData$Pred)
AllData$Want2See = as.factor(AllData$Want2See)
AllData$Con_Rev = factor(AllData$Con, levels = c('Coop','Comp'))
AllData_ValidTrials = filter(AllData, !(is.na(Choice)))
AllData_ValidTrials$RT_Rev = as.numeric(as.character(AllData_ValidTrials$RT))
AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] = AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] * - 1
AllSub = unique(AllData_ValidTrials$Sub)
AllSub$SubID = seq(1,30,1)
AllSub = as.data.frame(unique(AllData_ValidTrials$Sub))
AllSub$SubID = seq(1,30,1)
View(AllSub)
AllSub = []
# Recode subject numbers
AllSub = NULL
AllSub$Sub = as.data.frame(unique(AllData_ValidTrials$Sub))
AllSub$SubID = seq(1,30,1)
AllSub$Sub = as.data.frame(unique(AllData_ValidTrials$Sub))
AllSub$SubID = seq(1,30,1)
rm('AllSub')
Sub = unique(AllData_ValidTrials$Sub)
View(AllData)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
ggtitle("Example Participant") +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()) +
facet_wrap(~ Sub)
# Plot RT
AllData_ValidTrials = filter(AllData, !(is.na(Choice)))
AllData_ValidTrials$RT_Rev = as.numeric(as.character(AllData_ValidTrials$RT))
AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] = AllData_ValidTrials$RT_Rev[AllData_ValidTrials$MotCon == FALSE] * - 1
PPC = read.csv("../data/full_100000_ppc_data.csv", header = F)
# Wrangle data
colnames(PPC) = c("p_rt","p_resp","index","Sub","stim","response","rt","condition","mot_con")
PPC$Sub = as.factor(PPC$Sub)
PPC$p_rt = abs(PPC$p_rt)
PPC$p_mot_con = (PPC$p_resp > 0.5) & (PPC$condition > 0.5) | (PPC$p_resp < 0.5) & (PPC$condition < 0.5)
PPC$RT_Rev = PPC$p_rt
PPC$RT_Rev[PPC$p_mot_con == FALSE] = PPC$p_rt[PPC$p_mot_con == FALSE] * - 1
# Plot one subject
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
ggtitle("Example Participant") +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()) +
facet_wrap(~ Sub)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()) +
facet_wrap(~ Sub)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_blank()) +
facet_wrap(~ Sub)
SubID = c(1:30)
Sub = unique(AllData_ValidTrials$Sub)
AllSub = cbind(Sub,SubID)
View(AllSub)
Sub = unique(AllData_ValidTrials$Sub)
SubID = c(1:30)
AllSub = cbind(Sub,SubID)
View(AllSub)
AllSub = NULL
AllSub$Sub = unique(AllData_ValidTrials$Sub)
AllSub$SubID = c(1:30)
AllSub = as.data.frame(AllSub)
View(AllSub)
AllData_ValidTrials = left_join(AllData_ValidTrials,AllSub)
PPC = left_join(PPC,AllSub)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.background = element_blank()) +
facet_wrap(~ Sub)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.background = element_blank()) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank()) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(size = 12)) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(size = 2)) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(size = 10)) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(2,0,2,0, "cm"))) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.2,0,0.2,0, "cm"))) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.1,0,0.1,0, "cm"))) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.1,0,0.1,0, "cm"), size = 10)) +
facet_wrap(~ SubID)
# Plot one subject
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.15,0,0.15,0, "cm"), size = 12)) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.15,0,0.15,0, "cm"), size = 12)) +
facet_wrap(~ SubID)
ggplot() +
geom_histogram(data = AllData_ValidTrials,  aes(x = RT_Rev, y = ..ncount..)) +
geom_line(data = PPC, stat = "density", aes(x = RT_Rev, y = ..scaled..), size = 1) +
xlab("RT(s)") + ylab("Probability") +
theme(axis.text.y  = element_blank(),
strip.text.x = element_text(margin = margin(0.1,0,0.1,0, "cm"), size = 10)) +
facet_wrap(~ SubID)
